<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<bean name="p" class="com.my.dto.Product">
		<property name="prodNo" value="C0001" /> <!-- name속성 중복 O , id 속성은 중복 절대 X -->
		<property name="prodName" value="아메리카노" />
		<property name="prodPrice" value="1000" />
	</bean>
	
	<context:component-scan base-package="com.my.repository"/>
	<!--  component-scan은 base-package(com.my.repository)를 쭉 스캔하여 여러 클래스들 중에 이 클래스의 Component 계열의(@Repository)라는 
	어노테이션을 만나게 되면 빈(Bean) 객체를 생성 스프링컨테이너?!로 관리하게 됨 -->	
	<context:component-scan base-package="com.my.service" />
	
	
	<!--  MyConnection 파일  -->
	<bean name="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource"> <!-- 자바에서 제공하는 simpleDriver 라이브러리 사용 -->
			<property name="driverClass" value="oracle.jdbc.driver.OracleDriver" /> <!-- ojdbc.jar 라이브러리 필요-->
			<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" /> <!-- (MyConnection의) 미리 결정되어있는 이름속성 따라가야함 -->
			<property name="username" value="hr" />
			<property name="password" value="hr" />
		<!--  property 태그의 순서 상관 없음 -->
	</bean>
	
		<bean name="dataSource2" class="org.springframework.jdbc.datasource.SimpleDriverDataSource"> <!-- 자바에서 제공하는 simpleDriver 라이브러리 사용 -->
			<property name="driverClass" value="oracle.jdbc.driver.OracleDriver" /> <!-- ojdbc.jar 라이브러리 필요-->
			<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" /> <!-- (MyConnection의) 미리 결정되어있는 이름속성 따라가야함 -->
			<property name="username" value="system" />
			<property name="password" value="kosta" />
		<!--  property 태그의 순서 상관 없음 -->
	</bean>

</beans>


