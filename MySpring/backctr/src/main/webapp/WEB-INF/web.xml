<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
	id="WebApp_ID" version="4.0">
	<display-name>backctr</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.jsp</welcome-file>
		<welcome-file>default.htm</welcome-file>
	</welcome-file-list>	
	<!-- 톰캣이 구동되면서 Dispatcher서블릿의 도움을 받아 > servlet-context.xml 을 읽고 Spring 컨테이너도 구동되는 것 -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value> 
		</init-param>
		<load-on-startup>1</load-on-startup> <!-- 톰캣 켜지자마자 해당 서비스값?!이 만들어지도록 하는 것 -->
		<!--  ▲ 서블릿을 만들고 초기화 할 순서. 작은 수를 가진 서블릿이 우선적으로 만들어짐 -->
	</servlet>
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name> 
		<url-pattern>/</url-pattern>
	</servlet-mapping>
</web-app>

<!-- context path 뒤의 '/'로 시작하는 요청을 받아서 appServlet이라는 이름의 <servlet>으로 매핑하여
	 DispatcherServlet에서 처리하게 함-->
<!--  <servlet>과 <servlet-mapping>의 <servlet-name>을 같게 해놓아야 매핑된다 -->	 